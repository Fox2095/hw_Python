# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только
# чисел. Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и
# заполнять список. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на
# экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе
# пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться


class Exceptions:
    def __init__(self, *args):
        self.my_list = []

    def my_input(self):
        while True:
            value = input('Введите числа, для выхода stop: ')
            try:
                if value.isnumeric():
                    self.my_list.append(int(value))
            except Exceptions:
                print('Вы ввели не число')

            if value == 'stop':
                print(f'Список на момент выхода{self.my_list}')
                break
        
try_e = Exceptions()
print(try_e.my_input())